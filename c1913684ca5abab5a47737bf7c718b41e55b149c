{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "d12067b4_39c65acd",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 1025452
      },
      "writtenOn": "2025-03-14T05:57:20Z",
      "side": 1,
      "message": "But upgraded sites would still have `MaxWithBlock` etc. functions set. IMHO we should keep the existing functionality working as expected hence have it covered in tests. Can we perhaps add `MaxWithBlock` programmatically so that these tests would still pass?",
      "revId": "c1913684ca5abab5a47737bf7c718b41e55b149c",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "756132c5_e2c8e9da",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 1155599
      },
      "writtenOn": "2025-03-14T09:29:38Z",
      "side": 1,
      "message": "So currently the SR checks for label functions, while the API doesn\u0027t.\nLabel Functions have been deprecated long so I wouldn\u0027t want to add functionality around them on the API.\nThe API and the SR should really behave the same way, no?",
      "parentUuid": "d12067b4_39c65acd",
      "revId": "c1913684ca5abab5a47737bf7c718b41e55b149c",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "2a06ccf7_b71b3869",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 1155599
      },
      "writtenOn": "2025-03-14T09:36:09Z",
      "side": 1,
      "message": "Also the test name is the opposite of what we\u0027re doing?\n`shouldConfiguredLabelScoreByCodeOwnerBeNotSufficientIfLabelRequiresMaxValue`, even setting the label function, currently if a score is set for the label it will take precedence over the label function, so this tests just seems like it\u0027s testing the wrong thing?",
      "parentUuid": "756132c5_e2c8e9da",
      "revId": "c1913684ca5abab5a47737bf7c718b41e55b149c",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "8e5f7e28_58afeba8",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 1006192
      },
      "writtenOn": "2025-03-14T17:40:16Z",
      "side": 1,
      "message": "I would agree in dropping the tests as we are not planning to work on that functionality anymore. However, @geminica.programs@gmail.com has a point: how do we check that they are still working though whilst they are deprecated?\n\nAlternatively, as we are on master, we can just decide to remove their support in the owners plugin. Let\u0027s discuss together.",
      "parentUuid": "2a06ccf7_b71b3869",
      "revId": "c1913684ca5abab5a47737bf7c718b41e55b149c",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "8876c80e_06a75444",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 1155599
      },
      "writtenOn": "2025-03-14T17:47:06Z",
      "side": 1,
      "message": "These tests are not working though. They are currently failing the build on master.",
      "parentUuid": "8e5f7e28_58afeba8",
      "revId": "c1913684ca5abab5a47737bf7c718b41e55b149c",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "9c0c1e8c_5324bb33",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 1025452
      },
      "writtenOn": "2025-03-18T09:39:36Z",
      "side": 1,
      "message": "They are not working cuz Gerrit\u0027s `master` was modified so that `CodeReview` label has no longer `MaxWithBlock` function.\nAlso the test `shouldConfiguredLabelScoreByCodeOwnerBeNotSufficientIfLabelRequiresMaxValue` would be precisely veryfing that even if `owners` would specify that `CodeReview +1` is sufficient but `MaxWithBlock` function was still in play it would be not enough to have the change submittable for `+1` vote on owned files.",
      "parentUuid": "8876c80e_06a75444",
      "revId": "c1913684ca5abab5a47737bf7c718b41e55b149c",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ab82b73e_a12ec371",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 1155599
      },
      "writtenOn": "2025-03-18T13:15:07Z",
      "side": 1,
      "message": "But we\u0027re not testing the plugin code then, we\u0027re testing whatever the default submit requirements/label functions in Gerrit core are?\n\nThe logic in owners plugin completely changed in the change I link in the commit message. Before, the label function would take precedence over the vote",
      "parentUuid": "9c0c1e8c_5324bb33",
      "revId": "c1913684ca5abab5a47737bf7c718b41e55b149c",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "93c2381c_ccce0480",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 1006192
      },
      "writtenOn": "2025-03-18T13:22:58Z",
      "side": 1,
      "message": "\u003e But we\u0027re not testing the plugin code then, we\u0027re testing whatever the default submit requirements/label functions in Gerrit core are?\n\nYes, we should leave Gerrit testing responsibility to Gerrit tests. The assertion on which label status code would Gerrit give is to be tested by Gerrit test suite, not here. As a matter of fact, this part broke in master when Gerrit functionality changed.",
      "parentUuid": "ab82b73e_a12ec371",
      "revId": "c1913684ca5abab5a47737bf7c718b41e55b149c",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "e005530e_f4a07345",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 1025452
      },
      "writtenOn": "2025-03-19T06:33:05Z",
      "side": 1,
      "message": "We have unit tests for testing the plugin - this is the integration tests that tests overall intergration of plugin and Gerrit and it is OK that it fails when Gerrit moves on...",
      "parentUuid": "93c2381c_ccce0480",
      "revId": "c1913684ca5abab5a47737bf7c718b41e55b149c",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "6f37068c_f1dc31ca",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 1006192
      },
      "writtenOn": "2025-03-19T15:32:20Z",
      "side": 1,
      "message": "\u003e We have unit tests for testing the plugin - this is the integration tests that tests overall intergration of plugin and Gerrit\n\nSure, but we should assert the plugin\u0027s behaviour when integrated with Gerrit and not the Gerrit\u0027s functionality. That\u0027s why I commented on the assertions on Gerrit not the validity of the test overall.\n\n\u003e and it is OK that it fails when Gerrit moves on...\n\nWell, it is NOT OK if the plugin still works and the test fails. That means we were asserting too much and the wrong thing. But that\u0027s possibly a discussion for a talk rather than a change :-)",
      "parentUuid": "e005530e_f4a07345",
      "revId": "c1913684ca5abab5a47737bf7c718b41e55b149c",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    }
  ]
}