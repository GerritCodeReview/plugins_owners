{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "445f4ca1_1ae26fa8",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1025452
      },
      "writtenOn": "2023-06-05T05:31:34Z",
      "side": 1,
      "message": "Verified with\n```\n$ bazel test --cache_test_results\u003dNO plugins/owners-common/... plugins/owners/... plugins/owners-autoassign/...\n...\n//plugins/owners:owners_tests                                            PASSED in 133.7s\n//plugins/owners-autoassign:owners_autoassign_tests                      PASSED in 48.7s\n//plugins/owners-common:test                                             PASSED in 1.9s\n```",
      "revId": "a446131998d38e17d34c2b1f9d3ba9dd0ce15420",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "c7a99934_edd47bee",
        "filename": "owners/src/main/java/com/googlesource/gerrit/owners/OwnersStoredValues.java",
        "patchSetId": 1
      },
      "lineNbr": 54,
      "author": {
        "id": 1011323
      },
      "writtenOn": "2023-06-08T06:09:46Z",
      "side": 1,
      "message": "Unrelated here, but I\u0027m getting warning in Eclipse that this type specification is redundant.",
      "range": {
        "startLine": 54,
        "startChar": 24,
        "endLine": 54,
        "endChar": 34
      },
      "revId": "a446131998d38e17d34c2b1f9d3ba9dd0ce15420",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "4176626c_c9025308",
        "filename": "owners/src/main/java/com/googlesource/gerrit/owners/OwnersStoredValues.java",
        "patchSetId": 1
      },
      "lineNbr": 54,
      "author": {
        "id": 1025452
      },
      "writtenOn": "2023-06-08T07:09:44Z",
      "side": 1,
      "message": "Done in Ic4883b00a9d",
      "parentUuid": "c7a99934_edd47bee",
      "range": {
        "startLine": 54,
        "startChar": 24,
        "endLine": 54,
        "endChar": 34
      },
      "revId": "a446131998d38e17d34c2b1f9d3ba9dd0ce15420",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "8c87310c_55cf41d5",
        "filename": "owners/src/main/java/com/googlesource/gerrit/owners/restapi/GetFilesOwners.java",
        "patchSetId": 1
      },
      "lineNbr": 64,
      "author": {
        "id": 1011323
      },
      "writtenOn": "2023-06-08T06:13:54Z",
      "side": 1,
      "message": "Unrelated here: these two members are unused.",
      "range": {
        "startLine": 62,
        "startChar": 2,
        "endLine": 64,
        "endChar": 46
      },
      "revId": "a446131998d38e17d34c2b1f9d3ba9dd0ce15420",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "67e934b4_c78eb498",
        "filename": "owners/src/main/java/com/googlesource/gerrit/owners/restapi/GetFilesOwners.java",
        "patchSetId": 1
      },
      "lineNbr": 64,
      "author": {
        "id": 1025452
      },
      "writtenOn": "2023-06-08T07:09:44Z",
      "side": 1,
      "message": "Done in Idb1931d0cc14ec",
      "parentUuid": "8c87310c_55cf41d5",
      "range": {
        "startLine": 62,
        "startChar": 2,
        "endLine": 64,
        "endChar": 46
      },
      "revId": "a446131998d38e17d34c2b1f9d3ba9dd0ce15420",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "c6f420d0_d2052449",
        "filename": "owners/src/main/java/com/googlesource/gerrit/owners/restapi/GetFilesOwners.java",
        "patchSetId": 1
      },
      "lineNbr": 85,
      "author": {
        "id": 1011323
      },
      "writtenOn": "2023-06-08T06:13:54Z",
      "side": 1,
      "message": "Unused.",
      "range": {
        "startLine": 85,
        "startChar": 4,
        "endLine": 85,
        "endChar": 41
      },
      "revId": "a446131998d38e17d34c2b1f9d3ba9dd0ce15420",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "3093a5b4_77ec86ac",
        "filename": "owners/src/main/java/com/googlesource/gerrit/owners/restapi/GetFilesOwners.java",
        "patchSetId": 1
      },
      "lineNbr": 85,
      "author": {
        "id": 1025452
      },
      "writtenOn": "2023-06-08T07:09:44Z",
      "side": 1,
      "message": "Done in Idb1931d0cc14ec",
      "parentUuid": "c6f420d0_d2052449",
      "range": {
        "startLine": 85,
        "startChar": 4,
        "endLine": 85,
        "endChar": 41
      },
      "revId": "a446131998d38e17d34c2b1f9d3ba9dd0ce15420",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a5ef4b5b_647071dc",
        "filename": "owners/src/main/java/com/googlesource/gerrit/owners/restapi/GetFilesOwners.java",
        "patchSetId": 1
      },
      "lineNbr": 99,
      "author": {
        "id": 1011323
      },
      "writtenOn": "2023-06-08T06:13:54Z",
      "side": 1,
      "message": "Unsed. Should the clean-up be done in its own change, something like: [1]?\n\n[1]: https://paste.openstack.org/show/btD8GtUHmJhdDVIW5c7b/",
      "range": {
        "startLine": 99,
        "startChar": 4,
        "endLine": 99,
        "endChar": 41
      },
      "revId": "a446131998d38e17d34c2b1f9d3ba9dd0ce15420",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "f806ca15_6f247d54",
        "filename": "owners/src/main/java/com/googlesource/gerrit/owners/restapi/GetFilesOwners.java",
        "patchSetId": 1
      },
      "lineNbr": 99,
      "author": {
        "id": 1025452
      },
      "writtenOn": "2023-06-08T07:09:44Z",
      "side": 1,
      "message": "Yeap, good idea, done in Idb1931d0cc14ec",
      "parentUuid": "a5ef4b5b_647071dc",
      "range": {
        "startLine": 99,
        "startChar": 4,
        "endLine": 99,
        "endChar": 41
      },
      "revId": "a446131998d38e17d34c2b1f9d3ba9dd0ce15420",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "eacae754_891c636f",
        "filename": "owners/src/test/java/com/googlesource/gerrit/owners/OwnersSubmitRequirementIT.java",
        "patchSetId": 1
      },
      "lineNbr": 399,
      "author": {
        "id": 1011323
      },
      "writtenOn": "2023-06-05T06:06:41Z",
      "side": 1,
      "message": "Would it be possible to add a test to demonstrate that OWNERS file hierarchy doesn\u0027t inherit from All-Parents project as predecessor of this change?\n\nI tried to apply this test only to the stable-3.5 without the rest of this change, but then the test is failing:\n\n```\n1) shouldRequireApprovalFromGrandParentProjectOwner(com.googlesource.gerrit.owners.OwnersApprovalHasOperandIT)\nmissing (1): LegacySubmitRequirementInfo{status\u003dNOT_READY, fallbackText\u003dOwners, type\u003downers}\n---\nexpected   : [LegacySubmitRequirementInfo{status\u003dNOT_READY, fallbackText\u003dOwners, type\u003downers}]\nbut was    : []\n\tat com.googlesource.gerrit.owners.OwnersSubmitRequirementIT.shouldRequireApprovalFromGrandParentProjectOwner(OwnersSubmitRequirementIT.java:387)\n2) shouldRequireApprovalFromGrandParentProjectOwner(com.googlesource.gerrit.owners.OwnersSubmitRequirementIT)\nmissing (1): LegacySubmitRequirementInfo{status\u003dNOT_READY, fallbackText\u003dOwners, type\u003downers}\n---\nexpected   : [LegacySubmitRequirementInfo{status\u003dNOT_READY, fallbackText\u003dOwners, type\u003downers}]\nbut was    : []\n\tat com.googlesource.gerrit.owners.OwnersSubmitRequirementIT.shouldRequireApprovalFromGrandParentProjectOwner(OwnersSubmitRequirementIT.java:387)\n\nFAILURES!!!\nTests run: 58,  Failures: 2\n```\n\nAnother question is: why this test is executed twice?",
      "range": {
        "startLine": 367,
        "startChar": 2,
        "endLine": 399,
        "endChar": 3
      },
      "revId": "a446131998d38e17d34c2b1f9d3ba9dd0ce15420",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "8d0f4b0e_7ec77787",
        "filename": "owners/src/test/java/com/googlesource/gerrit/owners/OwnersSubmitRequirementIT.java",
        "patchSetId": 1
      },
      "lineNbr": 399,
      "author": {
        "id": 1011323
      },
      "writtenOn": "2023-06-05T06:26:59Z",
      "side": 1,
      "message": "\u003e Another question is: why this test is executed twice?\n\nI think this is because `OwnersApprovalHasOperandI` is derived from `OwnersSubmitRequirementIT` as described in the commit message in change 365711. But is this actually justified, that all tests are executed twice? Can we do something similar to `pull-replication` and extract abstract class, see change 375954?\n\nUnrelated to this change, but I am seeing timeout in test execution on my old laptop, so that I tried to split the tests into own Bazel rule per test:\n\n```\n-junit_tests(\n-    name \u003d \"owners_tests\",\n-    srcs \u003d glob([\"src/test/java/**/*.java\"]),\n-    tags \u003d [\"owners\"],\n-    deps \u003d [\"owners__plugin_test_deps\"],\n-)\n+[junit_tests(\n+    name \u003d f[:f.index(\".\")].replace(\"/\", \"_\"),\n+    srcs \u003d [f],\n+    tags \u003d [\"owner\"],\n+    deps \u003d PLUGIN_TEST_DEPS + PLUGIN_DEPS + [\n+        \":owners__plugin_test_deps\",\n+    ],\n+) for f in glob([\"src/test/java/**/*.java\"])]\n```\n\nAnd it doesn\u0027t work, for the same reasons as in `pull-replication` plugin, see change 374814.",
      "parentUuid": "eacae754_891c636f",
      "range": {
        "startLine": 367,
        "startChar": 2,
        "endLine": 399,
        "endChar": 3
      },
      "revId": "a446131998d38e17d34c2b1f9d3ba9dd0ce15420",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d9e35add_6e18410d",
        "filename": "owners/src/test/java/com/googlesource/gerrit/owners/OwnersSubmitRequirementIT.java",
        "patchSetId": 1
      },
      "lineNbr": 399,
      "author": {
        "id": 1025452
      },
      "writtenOn": "2023-06-05T08:35:16Z",
      "side": 1,
      "message": "That is correct. The second time is performed when submit requirement feature is configured for project in question (it requires an extra project configuration).\n\nI can take the separation of ITs as a follow-up to this change 👍",
      "parentUuid": "8d0f4b0e_7ec77787",
      "range": {
        "startLine": 367,
        "startChar": 2,
        "endLine": 399,
        "endChar": 3
      },
      "revId": "a446131998d38e17d34c2b1f9d3ba9dd0ce15420",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "582a2cc7_cc10022c",
        "filename": "owners/src/test/java/com/googlesource/gerrit/owners/OwnersSubmitRequirementIT.java",
        "patchSetId": 1
      },
      "lineNbr": 399,
      "author": {
        "id": 1025452
      },
      "writtenOn": "2023-06-06T05:45:53Z",
      "side": 1,
      "message": "Addressed the comments in the follow-up change.",
      "parentUuid": "d9e35add_6e18410d",
      "range": {
        "startLine": 367,
        "startChar": 2,
        "endLine": 399,
        "endChar": 3
      },
      "revId": "a446131998d38e17d34c2b1f9d3ba9dd0ce15420",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    }
  ],
  "submitRequirementResults": [
    {
      "submitRequirement": {
        "name": "Code-Review",
        "description": {
          "value": "At least one maximum vote for label \u0027Code-Review\u0027 is required"
        },
        "applicabilityExpression": {},
        "submittabilityExpression": {
          "expressionString": "label:Code-Review\u003dMAX,user\u003dnon_uploader AND -label:Code-Review\u003dMIN"
        },
        "overrideExpression": {},
        "allowOverrideInChildProjects": true
      },
      "applicabilityExpressionResult": {},
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"label:Code-Review=MAX,user=non_uploader AND -label:Code-Review=MIN"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":["label:Code-Review=MAX,user=non_uploader"],"failingAtoms":["label:Code-Review=MIN"]}
      },
      "overrideExpressionResult": {},
      "patchSetCommitId": "a446131998d38e17d34c2b1f9d3ba9dd0ce15420",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    },
    {
      "submitRequirement": {
        "name": "Do-Not-Submit",
        "description": {
          "value": "Changes that have DO NOT SUBMIT in their commit message are not submittable."
        },
        "applicabilityExpression": {
          "value": {
            "expressionString": "message:\"^.*(D|d)(O|o) (N|n)(O|o)(T|t) (S|s)(U|u)(B|b)(M|m)(I|i)(T|t).*\""
          }
        },
        "submittabilityExpression": {
          "expressionString": "is:false"
        },
        "overrideExpression": {},
        "allowOverrideInChildProjects": false
      },
      "applicabilityExpressionResult": {
        "value": {"expression":{"expressionString":"message:\"^.*(D|d)(O|o) (N|n)(O|o)(T|t) (S|s)(U|u)(B|b)(M|m)(I|i)(T|t).*\""},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["message:\"^.*(D|d)(O|o) (N|n)(O|o)(T|t) (S|s)(U|u)(B|b)(M|m)(I|i)(T|t).*\""]}
      },
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"is:false"},"status":"NOT_EVALUATED","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":[]}
      },
      "overrideExpressionResult": {},
      "patchSetCommitId": "a446131998d38e17d34c2b1f9d3ba9dd0ce15420",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    },
    {
      "submitRequirement": {
        "name": "No-Unresolved-Comments",
        "description": {
          "value": "Changes that have unresolved comments are not submittable. Unless overriden by adding the hashtag allow-unresolved-comments."
        },
        "applicabilityExpression": {
          "value": {
            "expressionString": "has:unresolved"
          }
        },
        "submittabilityExpression": {
          "expressionString": "-has:unresolved"
        },
        "overrideExpression": {
          "value": {
            "expressionString": "hashtag:allow-unresolved-comments"
          }
        },
        "allowOverrideInChildProjects": false
      },
      "applicabilityExpressionResult": {
        "value": {"expression":{"expressionString":"has:unresolved"},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["has:unresolved"]}
      },
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"-has:unresolved"},"status":"NOT_EVALUATED","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":[]}
      },
      "overrideExpressionResult": {
        "value": {"expression":{"expressionString":"hashtag:allow-unresolved-comments"},"status":"NOT_EVALUATED","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":[]}
      },
      "patchSetCommitId": "a446131998d38e17d34c2b1f9d3ba9dd0ce15420",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    },
    {
      "submitRequirement": {
        "name": "Review-Enforcement",
        "description": {
          "value": "Two Google employees must approve the change. Uploading the change or voting positively on Code-Review count as approval."
        },
        "applicabilityExpression": {
          "value": {
            "expressionString": "is:review-enforced_gerrit"
          }
        },
        "submittabilityExpression": {
          "expressionString": "is:review-enforcement-satisfied_gerrit"
        },
        "overrideExpression": {},
        "allowOverrideInChildProjects": false
      },
      "applicabilityExpressionResult": {
        "value": {"expression":{"expressionString":"is:review-enforced_gerrit"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":["is:review-enforced_gerrit"],"failingAtoms":[]}
      },
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"is:review-enforcement-satisfied_gerrit"},"status":"NOT_EVALUATED","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":[]}
      },
      "overrideExpressionResult": {
        "value": {"expression":{"expressionString":"is:review-enforced_gerrit"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["is:review-enforcement-satisfied_gerrit"]}
      },
      "patchSetCommitId": "a446131998d38e17d34c2b1f9d3ba9dd0ce15420",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {
        "value": true
      }
    },
    {
      "submitRequirement": {
        "name": "Verified",
        "description": {
          "value": "CI result status for build and tests is passing"
        },
        "applicabilityExpression": {
          "value": {
            "expressionString": "-branch:refs/meta/config"
          }
        },
        "submittabilityExpression": {
          "expressionString": "label:Verified\u003dMAX AND -label:Verified\u003dMIN"
        },
        "overrideExpression": {},
        "allowOverrideInChildProjects": true
      },
      "applicabilityExpressionResult": {
        "value": {"expression":{"expressionString":"-branch:refs/meta/config"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["branch:refs/meta/config"]}
      },
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"label:Verified=MAX AND -label:Verified=MIN"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":["label:Verified=MAX"],"failingAtoms":["label:Verified=MIN"]}
      },
      "overrideExpressionResult": {},
      "patchSetCommitId": "a446131998d38e17d34c2b1f9d3ba9dd0ce15420",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    }
  ]
}