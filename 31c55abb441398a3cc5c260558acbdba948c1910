{
  "comments": [
    {
      "key": {
        "uuid": "d607b228_586d384d",
        "filename": "README.md",
        "patchSetId": 3
      },
      "lineNbr": 52,
      "author": {
        "id": 1003935
      },
      "writtenOn": "2020-01-28T15:28:27Z",
      "side": 1,
      "message": "Do you know if this is still supposed to work?\n\nWhen I try this, I get:\n\n$ bazel build :all\nDEBUG: Rule \u0027com_googlesource_gerrit_bazlets\u0027 indicated that a canonical reproducible form can be obtained by modifying arguments shallow_since \u003d \"1549850496 +0900\"\nDEBUG: Call stack for the definition of repository \u0027com_googlesource_gerrit_bazlets\u0027 which is a git_repository (rule definition at /usr/local/google/home/ekempin/.cache/bazel/_bazel_ekempin/dd195c92c6b36e01b4a77a75d621fe1d/external/bazel_tools/tools/build_defs/repo/git.bzl:195:18):\n - /usr/local/google/home/ekempin/git/plugins/owners/bazlets.bzl:9:9\n - /usr/local/google/home/ekempin/git/plugins/owners/WORKSPACE:5:1\nERROR: /usr/local/google/home/ekempin/git/plugins/owners/external_plugin_deps.bzl:1:1: file \u0027//tools/bzl:maven_jar.bzl\u0027 does not contain symbol \u0027maven_jar\u0027\nERROR: error loading package \u0027\u0027: in /usr/local/google/home/ekempin/git/plugins/owners/external_plugin_deps_standalone.bzl: Extension file \u0027external_plugin_deps.bzl\u0027 has errors\nERROR: error loading package \u0027\u0027: in /usr/local/google/home/ekempin/git/plugins/owners/external_plugin_deps_standalone.bzl: Extension file \u0027external_plugin_deps.bzl\u0027 has errors\nINFO: Elapsed time: 0.062s\nINFO: 0 processes.\nFAILED: Build did NOT complete successfully (0 packages loaded)",
      "revId": "31c55abb441398a3cc5c260558acbdba948c1910",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "fbf9c721_e2ab3487",
        "filename": "README.md",
        "patchSetId": 3
      },
      "lineNbr": 52,
      "author": {
        "id": 1011323
      },
      "writtenOn": "2020-01-28T15:45:23Z",
      "side": 1,
      "message": "In the latest Bazel release native maven_jar rule was removed. Apparently import of Gerrit\u0027s own maven_jar rule was missed here. I can see, that it exists on master: [1].\n\nCan you try to build in satandalone mode on master, or does it have to be stable-2.15 branch?\n\n* [1] https://gerrit.googlesource.com/plugins/owners/+/refs/heads/master/external_plugin_deps.bzl#1",
      "parentUuid": "d607b228_586d384d",
      "revId": "31c55abb441398a3cc5c260558acbdba948c1910",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "72f96f85_d1790ee9",
        "filename": "README.md",
        "patchSetId": 3
      },
      "lineNbr": 52,
      "author": {
        "id": 1003935
      },
      "writtenOn": "2020-01-28T15:47:28Z",
      "side": 1,
      "message": "Thanks for checking. I tried this on master and I\u0027m not interested in stable branches.",
      "parentUuid": "fbf9c721_e2ab3487",
      "revId": "31c55abb441398a3cc5c260558acbdba948c1910",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "39438cfa_93ae27b4",
        "filename": "README.md",
        "patchSetId": 3
      },
      "lineNbr": 52,
      "author": {
        "id": 1011323
      },
      "writtenOn": "2020-01-28T15:59:43Z",
      "side": 1,
      "message": "OK, got it. It is this incompatible Bazel change that disallowed to load Starlark dependencies transitively: [1]. All others plugins were fixed, here is the fix for that incompatible change for oauth plugin: [2].\n\nOwners (and other plugin managed by Luca?) were not fixed. So I think the right course of action would be: file a issue for that, and either get standalone build mode fixed or get it entirely deleted, o that only in Gerrit tree mode is supported.\n\nNote, that of you only interested to build/debug/run the owners-plugin, you could still build it in Gerrit tree mode, without any issue, right?\n\n* [1] https://github.com/bazelbuild/bazel/issues/5636\n* [2] https://gerrit.googlesource.com/plugins/oauth/+/71b1128b63ec8710343ba920465c328d1eccac11",
      "parentUuid": "72f96f85_d1790ee9",
      "revId": "31c55abb441398a3cc5c260558acbdba948c1910",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a18e9f27_f4827638",
        "filename": "README.md",
        "patchSetId": 3
      },
      "lineNbr": 52,
      "author": {
        "id": 1003935
      },
      "writtenOn": "2020-01-28T16:10:27Z",
      "side": 1,
      "message": "Thanks for the pointers. Will follow-up on this tomorrow.\n\nYes, with the in Gerrit tree mode I was able to build it successfully.\nOnly the tests do not work for me [1], but that is likely a different issue.\n\n[1]\n$ bazel test owners-common:test \nINFO: Invocation ID: 219d77f6-1486-43f8-bf1a-f4b859353101\nINFO: Analyzed target //owners-common:test (3 packages loaded, 1477 targets configured).\nINFO: Found 1 test target...\nERROR: /usr/local/google/home/ekempin/git/gerrit/owners-common/BUILD:20:1: Building owners-common/test.jar (8 source files) and running annotation processors (AutoAnnotationProcessor, AutoValueProcessor) failed (Exit 1)\nowners-common/src/test/java/com/googlesource/gerrit/owners/common/Config.java:43: error: [strict] Using type org.powermock.api.easymock.PowerMock from an indirect dependency (TOOL_INFO: \"@powermock-api-easymock//jar\"). See command below **\n    PowerMock.mockStatic(JgitWrapper.class);\n    ^\nowners-common/src/test/java/com/googlesource/gerrit/owners/common/Config.java:17: error: [strict] Using type org.easymock.EasyMock from an indirect dependency (TOOL_INFO: \"@easymock//jar\"). See command below **\nimport static org.easymock.EasyMock.anyObject;\n                          ^\nowners-common/src/test/java/com/googlesource/gerrit/owners/common/PathOwnersTest.java:31: error: [strict] Using type org.powermock.modules.junit4.PowerMockRunner from an indirect dependency (TOOL_INFO: \"@powermock-module-junit4//jar\"). See command below **\n@RunWith(PowerMockRunner.class)\n         ^\nowners-common/src/test/java/com/googlesource/gerrit/owners/common/PathOwnersTest.java:32: error: [strict] Using type org.powermock.core.classloader.annotations.PrepareForTest from an indirect dependency (TOOL_INFO: \"@powermock-core//jar\"). See command below **\n@PrepareForTest(JgitWrapper.class)\n ^\n ** Please add the following dependencies: \n  @easymock//jar @powermock-api-easymock//jar @powermock-core//jar @powermock-module-junit4//jar to //owners-common:test \n ** You can use the following buildozer command: \nbuildozer \u0027add deps @easymock//jar @powermock-api-easymock//jar @powermock-core//jar @powermock-module-junit4//jar\u0027 //owners-common:test \n\nTarget //owners-common:test failed to build\nUse --verbose_failures to see the command lines of failed build steps.\nINFO: Elapsed time: 37.289s, Critical Path: 36.93s\nINFO: 96 processes: 47 linux-sandbox, 49 worker.\nFAILED: Build did NOT complete successfully\n\nFAILED: Build did NOT complete successfully",
      "parentUuid": "39438cfa_93ae27b4",
      "revId": "31c55abb441398a3cc5c260558acbdba948c1910",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    }
  ]
}