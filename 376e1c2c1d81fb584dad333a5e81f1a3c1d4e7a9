{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "28bc9088_c7cf7366",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 15,
      "author": {
        "id": 1006192
      },
      "writtenOn": "2023-03-15T09:45:01Z",
      "side": 1,
      "message": "Best to also specify in the commit message that the label definition is *global* for this file and also how it gets inherited.",
      "range": {
        "startLine": 15,
        "startChar": 2,
        "endLine": 15,
        "endChar": 23
      },
      "revId": "376e1c2c1d81fb584dad333a5e81f1a3c1d4e7a9",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "32741273_1eeb3c1b",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 22,
      "author": {
        "id": 1006192
      },
      "writtenOn": "2023-03-15T09:45:01Z",
      "side": 1,
      "message": "nit: wrap long line",
      "range": {
        "startLine": 22,
        "startChar": 70,
        "endLine": 22,
        "endChar": 73
      },
      "revId": "376e1c2c1d81fb584dad333a5e81f1a3c1d4e7a9",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "6e575615_884b7c87",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 24,
      "author": {
        "id": 1006192
      },
      "writtenOn": "2023-03-15T09:45:01Z",
      "side": 1,
      "message": "nit: wrap long line",
      "range": {
        "startLine": 24,
        "startChar": 70,
        "endLine": 24,
        "endChar": 76
      },
      "revId": "376e1c2c1d81fb584dad333a5e81f1a3c1d4e7a9",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "77fae78c_ecc786e1",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 24,
      "author": {
        "id": 1054778
      },
      "writtenOn": "2023-03-15T13:56:44Z",
      "side": 1,
      "message": "This is because we are assuming the is a `Submit Requirement` imposing it, right?\n\nMight be worth mentioning it, something like: \".....still have to give CR+2 as imposed by the submit requirement\"",
      "range": {
        "startLine": 24,
        "startChar": 0,
        "endLine": 24,
        "endChar": 64
      },
      "revId": "376e1c2c1d81fb584dad333a5e81f1a3c1d4e7a9",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "f24d517d_34484985",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1025452
      },
      "writtenOn": "2023-03-11T15:40:56Z",
      "side": 1,
      "message": "Verified both:\n* code format\n* tests\n```\n$ bazel test --cache_test_results\u003dNO plugins/owners-common/... plugins/owners/... plugins/owners-autoassign/...\n...\n//plugins/owners:owners_tests                                            PASSED in 73.1s\n//plugins/owners-autoassign:owners_autoassign_tests                      PASSED in 45.5s\n//plugins/owners-common:test                                             PASSED in 1.6s\n```",
      "revId": "376e1c2c1d81fb584dad333a5e81f1a3c1d4e7a9",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "bf1b6526_6fce51af",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1006192
      },
      "writtenOn": "2023-03-15T09:45:01Z",
      "side": 1,
      "message": "I am not able to find where the logic of the inheritance is implemented, can you help out?",
      "revId": "376e1c2c1d81fb584dad333a5e81f1a3c1d4e7a9",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "8e0f3309_fc06f51c",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1054778
      },
      "writtenOn": "2023-03-15T13:56:44Z",
      "side": 1,
      "message": "Reopening since it was resolved.",
      "parentUuid": "bf1b6526_6fce51af",
      "revId": "376e1c2c1d81fb584dad333a5e81f1a3c1d4e7a9",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "526c488d_3f14a0c0",
        "filename": "owners-common/src/main/java/com/googlesource/gerrit/owners/common/ConfigurationParser.java",
        "patchSetId": 1
      },
      "lineNbr": 50,
      "author": {
        "id": 1006192
      },
      "writtenOn": "2023-03-15T09:45:01Z",
      "side": 1,
      "message": "Why not calling it LabelDefinition instead? The property name is `label` and the getter/setter are using the `label` naming.",
      "range": {
        "startLine": 50,
        "startChar": 23,
        "endLine": 50,
        "endChar": 38
      },
      "revId": "376e1c2c1d81fb584dad333a5e81f1a3c1d4e7a9",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f7905a18_a0bf70ea",
        "filename": "owners-common/src/main/java/com/googlesource/gerrit/owners/common/ScoreDefinition.java",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1006192
      },
      "writtenOn": "2023-03-15T09:45:01Z",
      "side": 1,
      "message": "Consider calling this `LabelDefinition`",
      "revId": "376e1c2c1d81fb584dad333a5e81f1a3c1d4e7a9",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a1203732_efbc3054",
        "filename": "owners-common/src/main/java/com/googlesource/gerrit/owners/common/ScoreDefinition.java",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1054778
      },
      "writtenOn": "2023-03-15T13:56:44Z",
      "side": 1,
      "message": "+1",
      "parentUuid": "f7905a18_a0bf70ea",
      "revId": "376e1c2c1d81fb584dad333a5e81f1a3c1d4e7a9",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "1ab7865e_ab3bda8d",
        "filename": "owners-common/src/main/java/com/googlesource/gerrit/owners/common/ScoreDefinition.java",
        "patchSetId": 1
      },
      "lineNbr": 22,
      "author": {
        "id": 1006192
      },
      "writtenOn": "2023-03-15T09:45:01Z",
      "side": 1,
      "message": "Missing JavaDoc",
      "revId": "376e1c2c1d81fb584dad333a5e81f1a3c1d4e7a9",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "113c4020_bda306e0",
        "filename": "owners-common/src/main/java/com/googlesource/gerrit/owners/common/ScoreDefinition.java",
        "patchSetId": 1
      },
      "lineNbr": 90,
      "author": {
        "id": 1054778
      },
      "writtenOn": "2023-03-15T13:56:44Z",
      "side": 1,
      "message": "A `null` value will imply the default label value to be used, right?\n\nWhat about defaulting here instead of doing it later in `isLabelApproved`?\nI think it could simplify the code by removing some of the `Optional` we have around.",
      "range": {
        "startLine": 90,
        "startChar": 46,
        "endLine": 90,
        "endChar": 50
      },
      "revId": "376e1c2c1d81fb584dad333a5e81f1a3c1d4e7a9",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "e442b2a5_7253b734",
        "filename": "owners-common/src/main/java/com/googlesource/gerrit/owners/common/ScoreDefinition.java",
        "patchSetId": 1
      },
      "lineNbr": 91,
      "author": {
        "id": 1006192
      },
      "writtenOn": "2023-03-15T09:45:01Z",
      "side": 1,
      "message": "Why not a simple regex?",
      "range": {
        "startLine": 73,
        "startChar": 0,
        "endLine": 91,
        "endChar": 15
      },
      "revId": "376e1c2c1d81fb584dad333a5e81f1a3c1d4e7a9",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d0963448_779ba06e",
        "filename": "owners/src/main/java/com/googlesource/gerrit/owners/OwnersSubmitRequirement.java",
        "patchSetId": 1
      },
      "lineNbr": 146,
      "author": {
        "id": 1054778
      },
      "writtenOn": "2023-03-15T13:56:44Z",
      "side": 1,
      "message": "Looks like `ScoreDefinition` and `LabelAndScore` are carrying the same kind of information or am I getting it wrong?",
      "range": {
        "startLine": 146,
        "startChar": 6,
        "endLine": 146,
        "endChar": 19
      },
      "revId": "376e1c2c1d81fb584dad333a5e81f1a3c1d4e7a9",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d71c50dc_cd88636a",
        "filename": "owners/src/main/resources/Documentation/config.md",
        "patchSetId": 1
      },
      "lineNbr": 310,
      "author": {
        "id": 1054778
      },
      "writtenOn": "2023-03-15T13:56:44Z",
      "side": 1,
      "message": "This is because it is imposed by the Submit Rule, right? Might be clearer to specify it to make clear that the requirements are imposed by the Owner plugin and the Submit requirements.",
      "range": {
        "startLine": 310,
        "startChar": 58,
        "endLine": 310,
        "endChar": 72
      },
      "revId": "376e1c2c1d81fb584dad333a5e81f1a3c1d4e7a9",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    }
  ]
}