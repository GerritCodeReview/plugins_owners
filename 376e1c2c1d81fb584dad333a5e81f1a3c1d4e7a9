{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "28bc9088_c7cf7366",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 15,
      "author": {
        "id": 1006192
      },
      "writtenOn": "2023-03-15T09:45:01Z",
      "side": 1,
      "message": "Best to also specify in the commit message that the label definition is *global* for this file and also how it gets inherited.",
      "range": {
        "startLine": 15,
        "startChar": 2,
        "endLine": 15,
        "endChar": 23
      },
      "revId": "376e1c2c1d81fb584dad333a5e81f1a3c1d4e7a9",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "75991769_d11aa275",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 15,
      "author": {
        "id": 1025452
      },
      "writtenOn": "2023-03-17T11:03:00Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "28bc9088_c7cf7366",
      "range": {
        "startLine": 15,
        "startChar": 2,
        "endLine": 15,
        "endChar": 23
      },
      "revId": "376e1c2c1d81fb584dad333a5e81f1a3c1d4e7a9",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "32741273_1eeb3c1b",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 22,
      "author": {
        "id": 1006192
      },
      "writtenOn": "2023-03-15T09:45:01Z",
      "side": 1,
      "message": "nit: wrap long line",
      "range": {
        "startLine": 22,
        "startChar": 70,
        "endLine": 22,
        "endChar": 73
      },
      "revId": "376e1c2c1d81fb584dad333a5e81f1a3c1d4e7a9",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "9af74470_c210cdc6",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 22,
      "author": {
        "id": 1025452
      },
      "writtenOn": "2023-03-17T11:03:00Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "32741273_1eeb3c1b",
      "range": {
        "startLine": 22,
        "startChar": 70,
        "endLine": 22,
        "endChar": 73
      },
      "revId": "376e1c2c1d81fb584dad333a5e81f1a3c1d4e7a9",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "6e575615_884b7c87",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 24,
      "author": {
        "id": 1006192
      },
      "writtenOn": "2023-03-15T09:45:01Z",
      "side": 1,
      "message": "nit: wrap long line",
      "range": {
        "startLine": 24,
        "startChar": 70,
        "endLine": 24,
        "endChar": 76
      },
      "revId": "376e1c2c1d81fb584dad333a5e81f1a3c1d4e7a9",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "77fae78c_ecc786e1",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 24,
      "author": {
        "id": 1054778
      },
      "writtenOn": "2023-03-15T13:56:44Z",
      "side": 1,
      "message": "This is because we are assuming the is a `Submit Requirement` imposing it, right?\n\nMight be worth mentioning it, something like: \".....still have to give CR+2 as imposed by the submit requirement\"",
      "range": {
        "startLine": 24,
        "startChar": 0,
        "endLine": 24,
        "endChar": 64
      },
      "revId": "376e1c2c1d81fb584dad333a5e81f1a3c1d4e7a9",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "63d6b395_8a2cfa84",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 24,
      "author": {
        "id": 1025452
      },
      "writtenOn": "2023-03-17T11:03:00Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "6e575615_884b7c87",
      "range": {
        "startLine": 24,
        "startChar": 70,
        "endLine": 24,
        "endChar": 76
      },
      "revId": "376e1c2c1d81fb584dad333a5e81f1a3c1d4e7a9",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "136db555_07facdee",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 24,
      "author": {
        "id": 1025452
      },
      "writtenOn": "2023-03-17T11:03:00Z",
      "side": 1,
      "message": "This is because at this point it is just a submit rule that is evaluated as an addition to the default submit rule of Gerrit IOW it works in the default (legacy since 3.6) Gerrit mode (but without prolog rules). In the follow up patch change I\u0027m finally plugging it into the `Submit Requirements engine` 😊",
      "parentUuid": "77fae78c_ecc786e1",
      "range": {
        "startLine": 24,
        "startChar": 0,
        "endLine": 24,
        "endChar": 64
      },
      "revId": "376e1c2c1d81fb584dad333a5e81f1a3c1d4e7a9",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "f24d517d_34484985",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1025452
      },
      "writtenOn": "2023-03-11T15:40:56Z",
      "side": 1,
      "message": "Verified both:\n* code format\n* tests\n```\n$ bazel test --cache_test_results\u003dNO plugins/owners-common/... plugins/owners/... plugins/owners-autoassign/...\n...\n//plugins/owners:owners_tests                                            PASSED in 73.1s\n//plugins/owners-autoassign:owners_autoassign_tests                      PASSED in 45.5s\n//plugins/owners-common:test                                             PASSED in 1.6s\n```",
      "revId": "376e1c2c1d81fb584dad333a5e81f1a3c1d4e7a9",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "bf1b6526_6fce51af",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1006192
      },
      "writtenOn": "2023-03-15T09:45:01Z",
      "side": 1,
      "message": "I am not able to find where the logic of the inheritance is implemented, can you help out?",
      "revId": "376e1c2c1d81fb584dad333a5e81f1a3c1d4e7a9",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "8e0f3309_fc06f51c",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1054778
      },
      "writtenOn": "2023-03-15T13:56:44Z",
      "side": 1,
      "message": "Reopening since it was resolved.",
      "parentUuid": "bf1b6526_6fce51af",
      "revId": "376e1c2c1d81fb584dad333a5e81f1a3c1d4e7a9",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "306042f5_6b8251f0",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1063024
      },
      "writtenOn": "2023-03-16T23:14:24Z",
      "side": 1,
      "message": "Not gone through the whole change yet, but thought I\u0027d post what I have so far.",
      "revId": "376e1c2c1d81fb584dad333a5e81f1a3c1d4e7a9",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "c5bcb126_beb2c387",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1025452
      },
      "writtenOn": "2023-03-17T11:11:48Z",
      "side": 1,
      "message": "The inheritance logic is referenced in `com.googlesource.gerrit.owners.common.PathOwners.PathOwners(Accounts, GitRepositoryManager, Repository, List\u003cNameKey\u003e, Optional\u003cString\u003e, Set\u003cString\u003e, boolean)` constructor. And it is implemented in `com.googlesource.gerrit.owners.common.PathOwners.fetchOwners(String)`.\nThe `label` bit is added o all structures that are involved in building it.",
      "parentUuid": "8e0f3309_fc06f51c",
      "revId": "376e1c2c1d81fb584dad333a5e81f1a3c1d4e7a9",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "526c488d_3f14a0c0",
        "filename": "owners-common/src/main/java/com/googlesource/gerrit/owners/common/ConfigurationParser.java",
        "patchSetId": 1
      },
      "lineNbr": 50,
      "author": {
        "id": 1006192
      },
      "writtenOn": "2023-03-15T09:45:01Z",
      "side": 1,
      "message": "Why not calling it LabelDefinition instead? The property name is `label` and the getter/setter are using the `label` naming.",
      "range": {
        "startLine": 50,
        "startChar": 23,
        "endLine": 50,
        "endChar": 38
      },
      "revId": "376e1c2c1d81fb584dad333a5e81f1a3c1d4e7a9",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "ee472382_75d0285c",
        "filename": "owners-common/src/main/java/com/googlesource/gerrit/owners/common/ConfigurationParser.java",
        "patchSetId": 1
      },
      "lineNbr": 50,
      "author": {
        "id": 1025452
      },
      "writtenOn": "2023-03-17T11:03:00Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "526c488d_3f14a0c0",
      "range": {
        "startLine": 50,
        "startChar": 23,
        "endLine": 50,
        "endChar": 38
      },
      "revId": "376e1c2c1d81fb584dad333a5e81f1a3c1d4e7a9",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f7905a18_a0bf70ea",
        "filename": "owners-common/src/main/java/com/googlesource/gerrit/owners/common/ScoreDefinition.java",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1006192
      },
      "writtenOn": "2023-03-15T09:45:01Z",
      "side": 1,
      "message": "Consider calling this `LabelDefinition`",
      "revId": "376e1c2c1d81fb584dad333a5e81f1a3c1d4e7a9",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a1203732_efbc3054",
        "filename": "owners-common/src/main/java/com/googlesource/gerrit/owners/common/ScoreDefinition.java",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1054778
      },
      "writtenOn": "2023-03-15T13:56:44Z",
      "side": 1,
      "message": "+1",
      "parentUuid": "f7905a18_a0bf70ea",
      "revId": "376e1c2c1d81fb584dad333a5e81f1a3c1d4e7a9",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "b2496cbb_d8220c06",
        "filename": "owners-common/src/main/java/com/googlesource/gerrit/owners/common/ScoreDefinition.java",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1063024
      },
      "writtenOn": "2023-03-16T23:14:24Z",
      "side": 1,
      "message": "Maybe `Requirement` is more meaningful than `Definition` (i.e. `LabelRequirement`)? The commit message mentions this being a `requirement` which I think it is, both from a label and score point of view.\n\nHaving said that I don\u0027t know if there are conventions or there is Gerrit terminology where `Definition` is more appropriate for this case.",
      "parentUuid": "a1203732_efbc3054",
      "revId": "376e1c2c1d81fb584dad333a5e81f1a3c1d4e7a9",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "447feefc_e372bfbc",
        "filename": "owners-common/src/main/java/com/googlesource/gerrit/owners/common/ScoreDefinition.java",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1025452
      },
      "writtenOn": "2023-03-17T11:03:00Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "a1203732_efbc3054",
      "revId": "376e1c2c1d81fb584dad333a5e81f1a3c1d4e7a9",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "1ab7865e_ab3bda8d",
        "filename": "owners-common/src/main/java/com/googlesource/gerrit/owners/common/ScoreDefinition.java",
        "patchSetId": 1
      },
      "lineNbr": 22,
      "author": {
        "id": 1006192
      },
      "writtenOn": "2023-03-15T09:45:01Z",
      "side": 1,
      "message": "Missing JavaDoc",
      "revId": "376e1c2c1d81fb584dad333a5e81f1a3c1d4e7a9",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "04f07737_a6470773",
        "filename": "owners-common/src/main/java/com/googlesource/gerrit/owners/common/ScoreDefinition.java",
        "patchSetId": 1
      },
      "lineNbr": 22,
      "author": {
        "id": 1025452
      },
      "writtenOn": "2023-03-17T11:03:00Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "1ab7865e_ab3bda8d",
      "revId": "376e1c2c1d81fb584dad333a5e81f1a3c1d4e7a9",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "75131c68_5a256044",
        "filename": "owners-common/src/main/java/com/googlesource/gerrit/owners/common/ScoreDefinition.java",
        "patchSetId": 1
      },
      "lineNbr": 27,
      "author": {
        "id": 1025452
      },
      "writtenOn": "2023-03-17T11:03:00Z",
      "side": 1,
      "message": "change to `short` so that it is in line with `LabelType`",
      "range": {
        "startLine": 27,
        "startChar": 25,
        "endLine": 27,
        "endChar": 32
      },
      "revId": "376e1c2c1d81fb584dad333a5e81f1a3c1d4e7a9",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "113c4020_bda306e0",
        "filename": "owners-common/src/main/java/com/googlesource/gerrit/owners/common/ScoreDefinition.java",
        "patchSetId": 1
      },
      "lineNbr": 90,
      "author": {
        "id": 1054778
      },
      "writtenOn": "2023-03-15T13:56:44Z",
      "side": 1,
      "message": "A `null` value will imply the default label value to be used, right?\n\nWhat about defaulting here instead of doing it later in `isLabelApproved`?\nI think it could simplify the code by removing some of the `Optional` we have around.",
      "range": {
        "startLine": 90,
        "startChar": 46,
        "endLine": 90,
        "endChar": 50
      },
      "revId": "376e1c2c1d81fb584dad333a5e81f1a3c1d4e7a9",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ca900369_3ff8b18f",
        "filename": "owners-common/src/main/java/com/googlesource/gerrit/owners/common/ScoreDefinition.java",
        "patchSetId": 1
      },
      "lineNbr": 90,
      "author": {
        "id": 1025452
      },
      "writtenOn": "2023-03-17T11:03:00Z",
      "side": 1,
      "message": "The problem with defaulting it here is that this is not how `OWNERS` configuration is being treated and one would have to read the Project configuration with inheritance to do it properly (IOW the change is less invasive from both code and performance perspective) whereas in `isLabelApproved` it is just available.",
      "parentUuid": "113c4020_bda306e0",
      "range": {
        "startLine": 90,
        "startChar": 46,
        "endLine": 90,
        "endChar": 50
      },
      "revId": "376e1c2c1d81fb584dad333a5e81f1a3c1d4e7a9",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "e442b2a5_7253b734",
        "filename": "owners-common/src/main/java/com/googlesource/gerrit/owners/common/ScoreDefinition.java",
        "patchSetId": 1
      },
      "lineNbr": 91,
      "author": {
        "id": 1006192
      },
      "writtenOn": "2023-03-15T09:45:01Z",
      "side": 1,
      "message": "Why not a simple regex?",
      "range": {
        "startLine": 73,
        "startChar": 0,
        "endLine": 91,
        "endChar": 15
      },
      "revId": "376e1c2c1d81fb584dad333a5e81f1a3c1d4e7a9",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "15a0dc11_835ead88",
        "filename": "owners-common/src/main/java/com/googlesource/gerrit/owners/common/ScoreDefinition.java",
        "patchSetId": 1
      },
      "lineNbr": 91,
      "author": {
        "id": 1025452
      },
      "writtenOn": "2023-03-17T11:03:00Z",
      "side": 1,
      "message": "here is the _simple_ regex `^([a-zA-Z0-9-]+)(?:(?:\\s*,\\s*)(\\d)(?:\\s*))?$` ;)",
      "parentUuid": "e442b2a5_7253b734",
      "range": {
        "startLine": 73,
        "startChar": 0,
        "endLine": 91,
        "endChar": 15
      },
      "revId": "376e1c2c1d81fb584dad333a5e81f1a3c1d4e7a9",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "4c91f8d7_5f52f60d",
        "filename": "owners-common/src/test/java/com/googlesource/gerrit/owners/common/PathOwnersTest.java",
        "patchSetId": 1
      },
      "lineNbr": 151,
      "author": {
        "id": 1063024
      },
      "writtenOn": "2023-03-16T23:14:24Z",
      "side": 1,
      "message": "Nit: we could do this in a single test:\n\n`assertThat(owners2.getLabel().map(ScoreDefinition::getLabel)).hasValue(EXPECTED_LABEL);`\n\nI think it\u0027s a little more expressive but YMMV (either way is fine).",
      "revId": "376e1c2c1d81fb584dad333a5e81f1a3c1d4e7a9",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "5b17e560_57a0ddb9",
        "filename": "owners-common/src/test/java/com/googlesource/gerrit/owners/common/PathOwnersTest.java",
        "patchSetId": 1
      },
      "lineNbr": 151,
      "author": {
        "id": 1025452
      },
      "writtenOn": "2023-03-17T11:03:00Z",
      "side": 1,
      "message": "I was always under the impression that it will result in the bogus error message when `Optional` would be empty but I have finally checked it (because of your comment ❤️) and `truth8` does good job explaining nicely what has happened\n```\nexpected to have value: expected-label\nbut was empty\n\tat com.googlesource.gerrit.owners.common.PathOwnersTest.testClassicWithInheritance(PathOwnersTest.java:151)\n\n```",
      "parentUuid": "4c91f8d7_5f52f60d",
      "revId": "376e1c2c1d81fb584dad333a5e81f1a3c1d4e7a9",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "7008db40_8c071a4c",
        "filename": "owners-common/src/test/java/com/googlesource/gerrit/owners/common/PathOwnersTest.java",
        "patchSetId": 1
      },
      "lineNbr": 327,
      "author": {
        "id": 1063024
      },
      "writtenOn": "2023-03-16T23:14:24Z",
      "side": 1,
      "message": "Nit: existing test, but can we add some newlines between different parts of this test? I think it would make it a little easier to read.",
      "revId": "376e1c2c1d81fb584dad333a5e81f1a3c1d4e7a9",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "82ba0410_078165d1",
        "filename": "owners-common/src/test/java/com/googlesource/gerrit/owners/common/PathOwnersTest.java",
        "patchSetId": 1
      },
      "lineNbr": 327,
      "author": {
        "id": 1063024
      },
      "writtenOn": "2023-03-16T23:14:24Z",
      "side": 1,
      "message": "Tiny nit: is the default case with the score? If there\u0027s no leaning towards with/without score, would it make sense to call this `testParsingYamlWithScore`?",
      "revId": "376e1c2c1d81fb584dad333a5e81f1a3c1d4e7a9",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "06cbd34b_a4c71c48",
        "filename": "owners-common/src/test/java/com/googlesource/gerrit/owners/common/PathOwnersTest.java",
        "patchSetId": 1
      },
      "lineNbr": 327,
      "author": {
        "id": 1025452
      },
      "writtenOn": "2023-03-17T11:03:00Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "82ba0410_078165d1",
      "revId": "376e1c2c1d81fb584dad333a5e81f1a3c1d4e7a9",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "89799e60_3c45851a",
        "filename": "owners-common/src/test/java/com/googlesource/gerrit/owners/common/PathOwnersTest.java",
        "patchSetId": 1
      },
      "lineNbr": 327,
      "author": {
        "id": 1025452
      },
      "writtenOn": "2023-03-17T11:03:00Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "7008db40_8c071a4c",
      "revId": "376e1c2c1d81fb584dad333a5e81f1a3c1d4e7a9",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "edbdb33e_a143851b",
        "filename": "owners-common/src/test/java/com/googlesource/gerrit/owners/common/PathOwnersTest.java",
        "patchSetId": 1
      },
      "lineNbr": 344,
      "author": {
        "id": 1063024
      },
      "writtenOn": "2023-03-16T23:14:24Z",
      "side": 1,
      "message": "Nit: could we add some newlines here as well to make it easier to parse.",
      "revId": "376e1c2c1d81fb584dad333a5e81f1a3c1d4e7a9",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "75352f49_7b8084aa",
        "filename": "owners-common/src/test/java/com/googlesource/gerrit/owners/common/PathOwnersTest.java",
        "patchSetId": 1
      },
      "lineNbr": 344,
      "author": {
        "id": 1025452
      },
      "writtenOn": "2023-03-17T11:03:00Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "edbdb33e_a143851b",
      "revId": "376e1c2c1d81fb584dad333a5e81f1a3c1d4e7a9",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "c769e762_a84d985c",
        "filename": "owners-common/src/test/java/com/googlesource/gerrit/owners/common/ScoreDefinitionTest.java",
        "patchSetId": 1
      },
      "lineNbr": 27,
      "author": {
        "id": 1063024
      },
      "writtenOn": "2023-03-16T23:14:24Z",
      "side": 1,
      "message": "Terse and readable 👍",
      "revId": "376e1c2c1d81fb584dad333a5e81f1a3c1d4e7a9",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "d7a9ada5_d5c134aa",
        "filename": "owners-common/src/test/java/com/googlesource/gerrit/owners/common/ScoreDefinitionTest.java",
        "patchSetId": 1
      },
      "lineNbr": 27,
      "author": {
        "id": 1025452
      },
      "writtenOn": "2023-03-17T11:03:00Z",
      "side": 1,
      "message": "❤️",
      "parentUuid": "c769e762_a84d985c",
      "revId": "376e1c2c1d81fb584dad333a5e81f1a3c1d4e7a9",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d0963448_779ba06e",
        "filename": "owners/src/main/java/com/googlesource/gerrit/owners/OwnersSubmitRequirement.java",
        "patchSetId": 1
      },
      "lineNbr": 146,
      "author": {
        "id": 1054778
      },
      "writtenOn": "2023-03-15T13:56:44Z",
      "side": 1,
      "message": "Looks like `ScoreDefinition` and `LabelAndScore` are carrying the same kind of information or am I getting it wrong?",
      "range": {
        "startLine": 146,
        "startChar": 6,
        "endLine": 146,
        "endChar": 19
      },
      "revId": "376e1c2c1d81fb584dad333a5e81f1a3c1d4e7a9",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "b43cc5df_fa6e14c5",
        "filename": "owners/src/main/java/com/googlesource/gerrit/owners/OwnersSubmitRequirement.java",
        "patchSetId": 1
      },
      "lineNbr": 146,
      "author": {
        "id": 1025452
      },
      "writtenOn": "2023-03-17T11:03:00Z",
      "side": 1,
      "message": "Kind of ;) `ScoreDefinition` describes what is configured in the `OWNERS` file (with inheritance if enabled) whereas `LabelAndScore` maps it to label(s) configured for the project in question. But this is a good point and I can simplify it.",
      "parentUuid": "d0963448_779ba06e",
      "range": {
        "startLine": 146,
        "startChar": 6,
        "endLine": 146,
        "endChar": 19
      },
      "revId": "376e1c2c1d81fb584dad333a5e81f1a3c1d4e7a9",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ba4a2c8f_60298b1d",
        "filename": "owners/src/main/java/com/googlesource/gerrit/owners/OwnersSubmitRequirement.java",
        "patchSetId": 1
      },
      "lineNbr": 283,
      "author": {
        "id": 1063024
      },
      "writtenOn": "2023-03-16T23:14:24Z",
      "side": 1,
      "message": "I think I\u0027m missing a step here - I can see that this is ever set to a single label or no label. Why can\u0027t this be an `Optional\u003cLabelType\u003e`? Is this future-proofing, or something else?",
      "revId": "376e1c2c1d81fb584dad333a5e81f1a3c1d4e7a9",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "0feedbd5_84aab2fc",
        "filename": "owners/src/main/java/com/googlesource/gerrit/owners/OwnersSubmitRequirement.java",
        "patchSetId": 1
      },
      "lineNbr": 283,
      "author": {
        "id": 1025452
      },
      "writtenOn": "2023-03-17T11:03:00Z",
      "side": 1,
      "message": "That goes along with @Ponch comment. I have used `LabelTypes` as I have an object of it and it has its `byLabel` method (used in `hasSufficientApproval` method) IOW being a bit lazy in prototyping but this is no longer a need. What is more it can be expressed more precisely without an extra context that brings some confusion.",
      "parentUuid": "ba4a2c8f_60298b1d",
      "revId": "376e1c2c1d81fb584dad333a5e81f1a3c1d4e7a9",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d71c50dc_cd88636a",
        "filename": "owners/src/main/resources/Documentation/config.md",
        "patchSetId": 1
      },
      "lineNbr": 310,
      "author": {
        "id": 1054778
      },
      "writtenOn": "2023-03-15T13:56:44Z",
      "side": 1,
      "message": "This is because it is imposed by the Submit Rule, right? Might be clearer to specify it to make clear that the requirements are imposed by the Owner plugin and the Submit requirements.",
      "range": {
        "startLine": 310,
        "startChar": 58,
        "endLine": 310,
        "endChar": 72
      },
      "revId": "376e1c2c1d81fb584dad333a5e81f1a3c1d4e7a9",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "99d9b47d_d67ee000",
        "filename": "owners/src/main/resources/Documentation/config.md",
        "patchSetId": 1
      },
      "lineNbr": 310,
      "author": {
        "id": 1025452
      },
      "writtenOn": "2023-03-17T11:03:00Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "d71c50dc_cd88636a",
      "range": {
        "startLine": 310,
        "startChar": 58,
        "endLine": 310,
        "endChar": 72
      },
      "revId": "376e1c2c1d81fb584dad333a5e81f1a3c1d4e7a9",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    }
  ]
}