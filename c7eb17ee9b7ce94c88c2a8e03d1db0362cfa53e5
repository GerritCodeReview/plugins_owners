{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "ce29584e_325d5e3f",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1025452
      },
      "writtenOn": "2023-04-15T13:34:30Z",
      "side": 1,
      "message": "Verified both:\n* code format\n* tests\n```\n$ bazel test --cache_test_results\u003dNO plugins/owners-common/... plugins/owners/... plugins/owners-autoassign/...\n...\n//plugins/owners:owners_tests                                            PASSED in 128.7s\n//plugins/owners-autoassign:owners_autoassign_tests                      PASSED in 49.6s\n//plugins/owners-common:test                                             PASSED in 1.9s\n```",
      "revId": "c7eb17ee9b7ce94c88c2a8e03d1db0362cfa53e5",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "04620abc_3389a7e7",
        "filename": "owners-common/src/main/java/com/googlesource/gerrit/owners/common/PathOwners.java",
        "patchSetId": 1
      },
      "lineNbr": 265,
      "author": {
        "id": 1054778
      },
      "writtenOn": "2023-04-17T15:17:55Z",
      "side": 1,
      "message": "Shouldn\u0027t we catch this at L#219 and eventually fallback to the non cached value?",
      "range": {
        "startLine": 264,
        "startChar": 6,
        "endLine": 265,
        "endChar": 52
      },
      "revId": "c7eb17ee9b7ce94c88c2a8e03d1db0362cfa53e5",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f9871efd_a32756a7",
        "filename": "owners-common/src/main/java/com/googlesource/gerrit/owners/common/PathOwners.java",
        "patchSetId": 1
      },
      "lineNbr": 265,
      "author": {
        "id": 1025452
      },
      "writtenOn": "2023-04-19T06:07:52Z",
      "side": 1,
      "message": "Tempting ðŸ˜Š but IMHO it will not help too much as it will be thrown, per-documentation, when:\n\n\u003e @throws ExecutionException if a checked exception was thrown while loading the value\n\nIOW loading value already failed so trying to load it again... not sure if it would help, WDYT?",
      "parentUuid": "04620abc_3389a7e7",
      "range": {
        "startLine": 264,
        "startChar": 6,
        "endLine": 265,
        "endChar": 52
      },
      "revId": "c7eb17ee9b7ce94c88c2a8e03d1db0362cfa53e5",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "3a6c5c02_c1dd7595",
        "filename": "owners-common/src/main/java/com/googlesource/gerrit/owners/common/PathOwners.java",
        "patchSetId": 1
      },
      "lineNbr": 265,
      "author": {
        "id": 1054778
      },
      "writtenOn": "2023-04-19T07:55:06Z",
      "side": 1,
      "message": "The exception is thrown by the `cache.get(...)`, not from the `getPathOwnersEntry`.\n\nHence we could be successful going to disk. This is what I meant:\n\n```java\n\nPathOwnersEntry projectEntry;\ntry {\n  projectEntry \u003d cache.get(\n              project,\n              RefNames.REFS_CONFIG,\n              () -\u003e getPathOwnersEntry(repository, RefNames.REFS_CONFIG));\n} catch (ExecutionException e) {\n  projectEntry \u003d getPathOwnersEntry(repository, RefNames.REFS_CONFIG);     \n}\n\n```",
      "parentUuid": "f9871efd_a32756a7",
      "range": {
        "startLine": 264,
        "startChar": 6,
        "endLine": 265,
        "endChar": 52
      },
      "revId": "c7eb17ee9b7ce94c88c2a8e03d1db0362cfa53e5",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f3695fa5_1e76ac86",
        "filename": "owners-common/src/main/java/com/googlesource/gerrit/owners/common/PathOwners.java",
        "patchSetId": 1
      },
      "lineNbr": 265,
      "author": {
        "id": 1025452
      },
      "writtenOn": "2023-05-08T13:37:29Z",
      "side": 1,
      "message": "Nope. Per documentation: if the `ExecutionException` is thrown then it means that it failed during the value load IOW when the `IOException` was thrown during the `getPathOwnersEntry(...)` call.\n\nDo you believe that calling it again would work? IMHO it means that there is sth wrong with the `OWNERS` file... I have actually merged it with the original `IOException` handling.",
      "parentUuid": "3a6c5c02_c1dd7595",
      "range": {
        "startLine": 264,
        "startChar": 6,
        "endLine": 265,
        "endChar": 52
      },
      "revId": "c7eb17ee9b7ce94c88c2a8e03d1db0362cfa53e5",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "dd0f0b98_6cbb6df6",
        "filename": "owners-common/src/main/java/com/googlesource/gerrit/owners/common/PathOwners.java",
        "patchSetId": 1
      },
      "lineNbr": 265,
      "author": {
        "id": 1006192
      },
      "writtenOn": "2023-05-23T22:50:56Z",
      "side": 1,
      "message": "Agreed with @geminica.programs@gmail.com, the ExecutionException is when the loader failed. Calling the loader again won\u0027t help.",
      "parentUuid": "f3695fa5_1e76ac86",
      "range": {
        "startLine": 264,
        "startChar": 6,
        "endLine": 265,
        "endChar": 52
      },
      "revId": "c7eb17ee9b7ce94c88c2a8e03d1db0362cfa53e5",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "b8193428_75b36c23",
        "filename": "owners-common/src/main/java/com/googlesource/gerrit/owners/common/PathOwnersEntriesCache.java",
        "patchSetId": 1
      },
      "lineNbr": 47,
      "author": {
        "id": 1054778
      },
      "writtenOn": "2023-04-17T15:17:55Z",
      "side": 1,
      "message": "Should we also consider implementing `GitBatchRefUpdateListener`?",
      "range": {
        "startLine": 47,
        "startChar": 50,
        "endLine": 47,
        "endChar": 77
      },
      "revId": "c7eb17ee9b7ce94c88c2a8e03d1db0362cfa53e5",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "85c1ed72_d85c04cd",
        "filename": "owners-common/src/main/java/com/googlesource/gerrit/owners/common/PathOwnersEntriesCache.java",
        "patchSetId": 1
      },
      "lineNbr": 47,
      "author": {
        "id": 1025452
      },
      "writtenOn": "2023-04-19T06:07:52Z",
      "side": 1,
      "message": "Good point on `stable-3.6` onwards. I have added a bullet to the ticket related to the merge to `stable-3.6`",
      "parentUuid": "b8193428_75b36c23",
      "range": {
        "startLine": 47,
        "startChar": 50,
        "endLine": 47,
        "endChar": 77
      },
      "revId": "c7eb17ee9b7ce94c88c2a8e03d1db0362cfa53e5",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "44abc333_eca74cf3",
        "filename": "owners-common/src/main/java/com/googlesource/gerrit/owners/common/PathOwnersEntriesCache.java",
        "patchSetId": 1
      },
      "lineNbr": 56,
      "author": {
        "id": 1054778
      },
      "writtenOn": "2023-04-17T15:17:55Z",
      "side": 1,
      "message": "Am I missing something or we need to make sure that `com.googlesource.gerrit.owners.common.GitRefListener#onGitReferenceUpdated` is called after `PathOwnersEntriesCache.onGitReferenceUpdated`?\n\nIf so, how can we do that? Maybe I am just not getting how all the pieces fit together.",
      "revId": "c7eb17ee9b7ce94c88c2a8e03d1db0362cfa53e5",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "92644c1f_a9985c42",
        "filename": "owners-common/src/main/java/com/googlesource/gerrit/owners/common/PathOwnersEntriesCache.java",
        "patchSetId": 1
      },
      "lineNbr": 56,
      "author": {
        "id": 1025452
      },
      "writtenOn": "2023-04-19T06:07:52Z",
      "side": 1,
      "message": "You mean the new value is loaded? Nah, let\u0027s do that only when/if the new value is needed. If this is not what you meant please add more context.",
      "parentUuid": "44abc333_eca74cf3",
      "revId": "c7eb17ee9b7ce94c88c2a8e03d1db0362cfa53e5",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "2aba44db_ce5c7e48",
        "filename": "owners-common/src/main/java/com/googlesource/gerrit/owners/common/PathOwnersEntriesCache.java",
        "patchSetId": 1
      },
      "lineNbr": 56,
      "author": {
        "id": 1054778
      },
      "writtenOn": "2023-04-19T07:55:06Z",
      "side": 1,
      "message": "What I meant is here we are invalidating the cache, while in `com.googlesource.gerrit.owners.common.GitRefListener` we are now propagating the `PathOwnersEntriesCache` to the `PathOwners`.\n\n`PathOwners` will try to read from the cache, or recompute the `PathOwnersEntry` if no entries were present in the cache.\n\nIf `PathOwners` access the cache before it is invalidated, we might get a stale value. Could this be a problem?",
      "parentUuid": "92644c1f_a9985c42",
      "revId": "c7eb17ee9b7ce94c88c2a8e03d1db0362cfa53e5",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "f9c7b4f9_ab4b4b3f",
        "filename": "owners-common/src/main/java/com/googlesource/gerrit/owners/common/PathOwnersEntriesCache.java",
        "patchSetId": 1
      },
      "lineNbr": 56,
      "author": {
        "id": 1006192
      },
      "writtenOn": "2023-05-23T22:50:56Z",
      "side": 1,
      "message": "The only situation where we would have problems is then the ref-update of the OWNERS file is also creating or updating a change, which is clearly impossible.",
      "parentUuid": "2aba44db_ce5c7e48",
      "revId": "c7eb17ee9b7ce94c88c2a8e03d1db0362cfa53e5",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "6b2f2470_d9270c9b",
        "filename": "owners-common/src/test/java/com/googlesource/gerrit/owners/common/PathOwnersTest.java",
        "patchSetId": 1
      },
      "lineNbr": 14,
      "author": {
        "id": 1054778
      },
      "writtenOn": "2023-04-17T15:17:55Z",
      "side": 1,
      "message": "Should we add one test to show we are actually  hitting the cache?",
      "revId": "c7eb17ee9b7ce94c88c2a8e03d1db0362cfa53e5",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "dd98b3c8_2daebc71",
        "filename": "owners-common/src/test/java/com/googlesource/gerrit/owners/common/PathOwnersTest.java",
        "patchSetId": 1
      },
      "lineNbr": 14,
      "author": {
        "id": 1025452
      },
      "writtenOn": "2023-04-19T06:07:52Z",
      "side": 1,
      "message": "That was actually great catch... as I have detected that I haven\u0027t added caching to all paths...",
      "parentUuid": "6b2f2470_d9270c9b",
      "revId": "c7eb17ee9b7ce94c88c2a8e03d1db0362cfa53e5",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "4f03b97d_141f97b6",
        "filename": "owners-common/src/test/java/com/googlesource/gerrit/owners/common/PathOwnersTest.java",
        "patchSetId": 1
      },
      "lineNbr": 14,
      "author": {
        "id": 1025452
      },
      "writtenOn": "2023-05-25T08:10:01Z",
      "side": 1,
      "message": "The test case that verifies the cache\u0027s hit for:\nrepo\u0027s `refs/meta/config` and destination branch dirs as well as parent\u0027s `refs/meta/config` was added - see `testPathOwnersEntriesCacheIsCalled`",
      "parentUuid": "dd98b3c8_2daebc71",
      "revId": "c7eb17ee9b7ce94c88c2a8e03d1db0362cfa53e5",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    }
  ]
}