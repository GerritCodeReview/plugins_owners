{
  "comments": [
    {
      "key": {
        "uuid": "de0e3fbd_41e0e199",
        "filename": "owners-autoassign/src/main/java/com/googlesource/gerrit/owners/common/GitRefListener.java",
        "patchSetId": 1
      },
      "lineNbr": 96,
      "author": {
        "id": 1025452
      },
      "writtenOn": "2019-05-30T08:28:03Z",
      "side": 1,
      "message": "I could be stating the obvious but is that intended to have reviewers added for instance new patchset submitter? Wouldn\u0027t it be better to have it done by server ident?",
      "range": {
        "startLine": 94,
        "startChar": 4,
        "endLine": 96,
        "endChar": 5
      },
      "revId": "7ecedf9721fe42de9481922c6f5b7c8851f51f1c",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "be16ce6c_da16bed7",
        "filename": "owners-autoassign/src/main/java/com/googlesource/gerrit/owners/common/GitRefListener.java",
        "patchSetId": 1
      },
      "lineNbr": 96,
      "author": {
        "id": 1006192
      },
      "writtenOn": "2019-05-30T08:37:32Z",
      "side": 1,
      "message": "\u003e I could be stating the obvious but is that intended to have reviewers added for instance new patchset submitter?\n\nCan you rephrase? Not sure I understand what you mean.\n\n\u003e Wouldn\u0027t it be better to have it done by server ident?\n\nThat could be a security issue: if you are not meant to see a change, you shouldn\u0027t be able to do anything on it. This is a simple fix of an existing behaviour, not a change in behaviour.",
      "parentUuid": "de0e3fbd_41e0e199",
      "range": {
        "startLine": 94,
        "startChar": 4,
        "endLine": 96,
        "endChar": 5
      },
      "revId": "7ecedf9721fe42de9481922c6f5b7c8851f51f1c",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "341a9455_2f7421d9",
        "filename": "owners-autoassign/src/main/java/com/googlesource/gerrit/owners/common/GitRefListener.java",
        "patchSetId": 1
      },
      "lineNbr": 96,
      "author": {
        "id": 1025452
      },
      "writtenOn": "2019-05-30T10:37:01Z",
      "side": 1,
      "message": "\u003e Can you rephrase? Not sure I understand what you mean.\n\nI meant that in UI it will be a message like \u0027UserX added to REVIEWER: UserY, UserZ\u0027 and what is more AFAIU notification will be sent only to the reviewers added and in case the author was the one who uploaded new PS notification will be not sent to him.\nIOW the question is: do we want to keep it that way or better \u0027Gerrit\u0027 should be mentioned as the identity who added reviewers and notification sent also to the author if that happens?\n\n\u003e That could be a security issue:(...)\n\nWhat security issue? Correct me if I\u0027m mistaken but this is post-event action that already happened on the review so the user had permission to perform it. I would rather ask what if it fails now? I would rather say that it should not be able to fail no matter what ;)",
      "parentUuid": "be16ce6c_da16bed7",
      "range": {
        "startLine": 94,
        "startChar": 4,
        "endLine": 96,
        "endChar": 5
      },
      "revId": "7ecedf9721fe42de9481922c6f5b7c8851f51f1c",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "bdf5333f_54d9eacb",
        "filename": "owners-autoassign/src/main/java/com/googlesource/gerrit/owners/common/GitRefListener.java",
        "patchSetId": 1
      },
      "lineNbr": 104,
      "author": {
        "id": 1011123
      },
      "writtenOn": "2019-05-30T00:41:22Z",
      "side": 1,
      "message": "It\u0027s not necessary to use String.format.  Just use the Logger\u0027s built-in formatting.",
      "range": {
        "startLine": 104,
        "startChar": 10,
        "endLine": 104,
        "endChar": 25
      },
      "revId": "7ecedf9721fe42de9481922c6f5b7c8851f51f1c",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "9d56f9d0_61c57e09",
        "filename": "owners-autoassign/src/main/java/com/googlesource/gerrit/owners/common/GitRefListener.java",
        "patchSetId": 1
      },
      "lineNbr": 104,
      "author": {
        "id": 1006192
      },
      "writtenOn": "2019-05-30T08:04:28Z",
      "side": 1,
      "message": "What about the exception? If you just use the varargs syntax, you can\u0027t pass the exception isn\u0027t it?",
      "parentUuid": "bdf5333f_54d9eacb",
      "range": {
        "startLine": 104,
        "startChar": 10,
        "endLine": 104,
        "endChar": 25
      },
      "revId": "7ecedf9721fe42de9481922c6f5b7c8851f51f1c",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "bc9e5d1f_33992320",
        "filename": "owners-autoassign/src/main/java/com/googlesource/gerrit/owners/common/GitRefListener.java",
        "patchSetId": 1
      },
      "lineNbr": 104,
      "author": {
        "id": 1011123
      },
      "writtenOn": "2019-05-30T08:14:32Z",
      "side": 1,
      "message": "The Logger is smart enough to detect the exception passed in varargs.  There was discussion about this before, and if you look at Logger calls on core stable-2.16 they all use the built-in formatting and pass the exception as varargs.",
      "parentUuid": "9d56f9d0_61c57e09",
      "range": {
        "startLine": 104,
        "startChar": 10,
        "endLine": 104,
        "endChar": 25
      },
      "revId": "7ecedf9721fe42de9481922c6f5b7c8851f51f1c",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "9a0c6427_36f7fc52",
        "filename": "owners-autoassign/src/main/java/com/googlesource/gerrit/owners/common/GitRefListener.java",
        "patchSetId": 1
      },
      "lineNbr": 104,
      "author": {
        "id": 1006192
      },
      "writtenOn": "2019-05-30T08:37:32Z",
      "side": 1,
      "message": "Cool, will change that.",
      "parentUuid": "bc9e5d1f_33992320",
      "range": {
        "startLine": 104,
        "startChar": 10,
        "endLine": 104,
        "endChar": 25
      },
      "revId": "7ecedf9721fe42de9481922c6f5b7c8851f51f1c",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "8051f22c_0041dd13",
        "filename": "owners-autoassign/src/main/java/com/googlesource/gerrit/owners/common/GitRefListener.java",
        "patchSetId": 1
      },
      "lineNbr": 104,
      "author": {
        "id": 1006192
      },
      "writtenOn": "2019-05-30T09:40:03Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "9a0c6427_36f7fc52",
      "range": {
        "startLine": 104,
        "startChar": 10,
        "endLine": 104,
        "endChar": 25
      },
      "revId": "7ecedf9721fe42de9481922c6f5b7c8851f51f1c",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "f99cb994_dc7f9b5c",
        "filename": "owners-autoassign/src/main/java/com/googlesource/gerrit/owners/common/GitRefListener.java",
        "patchSetId": 1
      },
      "lineNbr": 154,
      "author": {
        "id": 1025452
      },
      "writtenOn": "2019-05-30T08:28:03Z",
      "side": 1,
      "message": "AFAIU com.google.gerrit.extensions.events.GitReferenceUpdatedListener.Event is being fired from multiple places not necessarily related to the review (see all fire methods in com.google.gerrit.server.extensions.events.GitReferenceUpdated). Wouldn\u0027t it be better to check if\ncId !\u003d null\nas this is going to be returned if ref is not a change ref and NPE is going to be thrown in #133?",
      "range": {
        "startLine": 127,
        "startChar": 2,
        "endLine": 154,
        "endChar": 3
      },
      "revId": "7ecedf9721fe42de9481922c6f5b7c8851f51f1c",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "42514e2c_b46164d4",
        "filename": "owners-autoassign/src/main/java/com/googlesource/gerrit/owners/common/GitRefListener.java",
        "patchSetId": 1
      },
      "lineNbr": 154,
      "author": {
        "id": 1006192
      },
      "writtenOn": "2019-05-30T08:37:32Z",
      "side": 1,
      "message": "You mean, a ref-update for a ref that starts with refs/changes and isn\u0027t related to a change? Did you find the issue? Can you raise it?\nHappy to manage that situation in a separate change.",
      "parentUuid": "f99cb994_dc7f9b5c",
      "range": {
        "startLine": 127,
        "startChar": 2,
        "endLine": 154,
        "endChar": 3
      },
      "revId": "7ecedf9721fe42de9481922c6f5b7c8851f51f1c",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a838c150_90041a18",
        "filename": "owners-autoassign/src/main/java/com/googlesource/gerrit/owners/common/GitRefListener.java",
        "patchSetId": 1
      },
      "lineNbr": 154,
      "author": {
        "id": 1025452
      },
      "writtenOn": "2019-05-30T10:37:01Z",
      "side": 1,
      "message": "Yeah, scratch that - haven\u0027t noticed that there is a check for refs/changes in #116 prior this method gets called ;)",
      "parentUuid": "42514e2c_b46164d4",
      "range": {
        "startLine": 127,
        "startChar": 2,
        "endLine": 154,
        "endChar": 3
      },
      "revId": "7ecedf9721fe42de9481922c6f5b7c8851f51f1c",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    }
  ]
}