{
  "comments": [
    {
      "key": {
        "uuid": "ee41fc8e_6cd611ba",
        "filename": "owners-common/src/main/java/com/vmware/gerrit/owners/common/AccountsImpl.java",
        "patchSetId": 3
      },
      "lineNbr": 151,
      "author": {
        "id": 1072905
      },
      "writtenOn": "2018-10-30T16:55:08Z",
      "side": 1,
      "message": "Does the order we check these matter?",
      "range": {
        "startLine": 149,
        "startChar": 8,
        "endLine": 151,
        "endChar": 23
      },
      "revId": "f8f54979d8b387029af3ec99e4de5897d84c7e1c",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "406fe420_ed413c21",
        "filename": "owners-common/src/main/java/com/vmware/gerrit/owners/common/AccountsImpl.java",
        "patchSetId": 3
      },
      "lineNbr": 151,
      "author": {
        "id": 1006192
      },
      "writtenOn": "2018-10-30T16:56:18Z",
      "side": 1,
      "message": "Oh yes, because the evaluation of the condition is short-circuited. The less expensive checks need to be executed first.",
      "parentUuid": "ee41fc8e_6cd611ba",
      "range": {
        "startLine": 149,
        "startChar": 8,
        "endLine": 151,
        "endChar": 23
      },
      "revId": "f8f54979d8b387029af3ec99e4de5897d84c7e1c",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "a0a6af02_398b4656",
        "filename": "owners-common/src/main/java/com/vmware/gerrit/owners/common/AccountsImpl.java",
        "patchSetId": 3
      },
      "lineNbr": 151,
      "author": {
        "id": 1072905
      },
      "writtenOn": "2018-10-30T17:01:05Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "406fe420_ed413c21",
      "range": {
        "startLine": 149,
        "startChar": 8,
        "endLine": 151,
        "endChar": 23
      },
      "revId": "f8f54979d8b387029af3ec99e4de5897d84c7e1c",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    }
  ]
}