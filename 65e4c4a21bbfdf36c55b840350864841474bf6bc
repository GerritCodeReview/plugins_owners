{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "716afb63_411fa95e",
        "filename": "/COMMIT_MSG",
        "patchSetId": 5
      },
      "lineNbr": 7,
      "author": {
        "id": 1006192
      },
      "writtenOn": "2025-03-10T21:17:28Z",
      "side": 1,
      "message": "Why? If the label is a `NoBlock` then the max label value isn\u0027t respecting it.",
      "range": {
        "startLine": 7,
        "startChar": 20,
        "endLine": 7,
        "endChar": 45
      },
      "revId": "65e4c4a21bbfdf36c55b840350864841474bf6bc",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "bad53c2a_a019b97d",
        "filename": "/COMMIT_MSG",
        "patchSetId": 5
      },
      "lineNbr": 7,
      "author": {
        "id": 1155599
      },
      "writtenOn": "2025-03-10T21:22:15Z",
      "side": 1,
      "message": "By default, going forward, all labels will be no block, true, but, by default, in the case of Code-Review label, the submit requirement is now requiring a max value by default.\n\nShould we also not default to the same?",
      "parentUuid": "716afb63_411fa95e",
      "range": {
        "startLine": 7,
        "startChar": 20,
        "endLine": 7,
        "endChar": 45
      },
      "revId": "65e4c4a21bbfdf36c55b840350864841474bf6bc",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "e1ca4e9f_c3ccaf1a",
        "filename": "/COMMIT_MSG",
        "patchSetId": 5
      },
      "lineNbr": 12,
      "author": {
        "id": 1006192
      },
      "writtenOn": "2025-03-10T21:17:28Z",
      "side": 1,
      "message": "I would disagree with this approach, and instead I propose to just *require* the vote in the configuration as compulsory, at least on master.",
      "range": {
        "startLine": 11,
        "startChar": 32,
        "endLine": 12,
        "endChar": 42
      },
      "revId": "65e4c4a21bbfdf36c55b840350864841474bf6bc",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a150a14f_a67828bf",
        "filename": "owners/src/test/java/com/googlesource/gerrit/owners/OwnersSubmitRequirementITAbstract.java",
        "patchSetId": 5
      },
      "lineNbr": 469,
      "author": {
        "id": 1025452
      },
      "writtenOn": "2025-03-10T21:10:27Z",
      "side": 1,
      "message": "Why it is needed? There is already `addOwnerFileToRoot` that seems to be doing the same?",
      "range": {
        "startLine": 469,
        "startChar": 17,
        "endLine": 469,
        "endChar": 46
      },
      "revId": "65e4c4a21bbfdf36c55b840350864841474bf6bc",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "2ac915f5_aa79f058",
        "filename": "owners/src/test/java/com/googlesource/gerrit/owners/OwnersSubmitRequirementITAbstract.java",
        "patchSetId": 5
      },
      "lineNbr": 469,
      "author": {
        "id": 1155599
      },
      "writtenOn": "2025-03-10T21:22:15Z",
      "side": 1,
      "message": "The other one is requesting a label definition for the owners file, this isn\u0027t.",
      "parentUuid": "a150a14f_a67828bf",
      "range": {
        "startLine": 469,
        "startChar": 17,
        "endLine": 469,
        "endChar": 46
      },
      "revId": "65e4c4a21bbfdf36c55b840350864841474bf6bc",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "62f5f50a_f3496a9b",
        "filename": "owners/src/test/java/com/googlesource/gerrit/owners/OwnersSubmitRequirementITAbstract.java",
        "patchSetId": 5
      },
      "lineNbr": 469,
      "author": {
        "id": 1025452
      },
      "writtenOn": "2025-03-11T09:36:52Z",
      "side": 1,
      "message": "AFAICT the one from line #430 doesn\u0027t require any label, just scroll up a bit ðŸ˜Š",
      "parentUuid": "2ac915f5_aa79f058",
      "range": {
        "startLine": 469,
        "startChar": 17,
        "endLine": 469,
        "endChar": 46
      },
      "revId": "65e4c4a21bbfdf36c55b840350864841474bf6bc",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    }
  ],
  "submitRequirementResults": [
    {
      "submitRequirement": {
        "name": "Code-Review",
        "description": {
          "value": "At least one maximum vote for label \u0027Code-Review\u0027 is required"
        },
        "applicabilityExpression": {},
        "submittabilityExpression": {
          "expressionString": "label:Code-Review\u003dMAX,user\u003dnon_uploader AND -label:Code-Review\u003dMIN"
        },
        "overrideExpression": {},
        "allowOverrideInChildProjects": true
      },
      "applicabilityExpressionResult": {},
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"label:Code-Review=MAX,user=non_uploader AND -label:Code-Review=MIN"},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["label:Code-Review=MAX,user=non_uploader","label:Code-Review=MIN"],"atomExplanations":{"value":{"label:Code-Review=MAX,user=non_uploader":"","label:Code-Review=MIN":""}}}
      },
      "overrideExpressionResult": {},
      "patchSetCommitId": "65e4c4a21bbfdf36c55b840350864841474bf6bc",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    },
    {
      "submitRequirement": {
        "name": "Do-Not-Submit",
        "description": {
          "value": "Changes that have DO NOT SUBMIT in their commit message are not submittable."
        },
        "applicabilityExpression": {
          "value": {
            "expressionString": "message:\"^.*(D|d)(O|o) (N|n)(O|o)(T|t) (S|s)(U|u)(B|b)(M|m)(I|i)(T|t).*\""
          }
        },
        "submittabilityExpression": {
          "expressionString": "is:false"
        },
        "overrideExpression": {},
        "allowOverrideInChildProjects": false
      },
      "applicabilityExpressionResult": {
        "value": {"expression":{"expressionString":"message:\"^.*(D|d)(O|o) (N|n)(O|o)(T|t) (S|s)(U|u)(B|b)(M|m)(I|i)(T|t).*\""},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["message:\"^.*(D|d)(O|o) (N|n)(O|o)(T|t) (S|s)(U|u)(B|b)(M|m)(I|i)(T|t).*\""],"atomExplanations":{"value":{"message:\"^.*(D|d)(O|o) (N|n)(O|o)(T|t) (S|s)(U|u)(B|b)(M|m)(I|i)(T|t).*\"":""}}}
      },
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"is:false"},"status":"NOT_EVALUATED","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":[],"atomExplanations":{"value":null}}
      },
      "overrideExpressionResult": {},
      "patchSetCommitId": "65e4c4a21bbfdf36c55b840350864841474bf6bc",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    },
    {
      "submitRequirement": {
        "name": "No-Unresolved-Comments",
        "description": {
          "value": "Changes that have unresolved comments are not submittable. Unless overriden by adding the hashtag allow-unresolved-comments."
        },
        "applicabilityExpression": {
          "value": {
            "expressionString": "has:unresolved"
          }
        },
        "submittabilityExpression": {
          "expressionString": "-has:unresolved"
        },
        "overrideExpression": {
          "value": {
            "expressionString": "hashtag:allow-unresolved-comments"
          }
        },
        "allowOverrideInChildProjects": false
      },
      "applicabilityExpressionResult": {
        "value": {"expression":{"expressionString":"has:unresolved"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":["has:unresolved"],"failingAtoms":[],"atomExplanations":{"value":{"has:unresolved":""}}}
      },
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"-has:unresolved"},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":["has:unresolved"],"failingAtoms":[],"atomExplanations":{"value":{"has:unresolved":""}}}
      },
      "overrideExpressionResult": {
        "value": {"expression":{"expressionString":"hashtag:allow-unresolved-comments"},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["hashtag:allow-unresolved-comments"],"atomExplanations":{"value":{"hashtag:allow-unresolved-comments":""}}}
      },
      "patchSetCommitId": "65e4c4a21bbfdf36c55b840350864841474bf6bc",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    },
    {
      "submitRequirement": {
        "name": "Review-Enforcement",
        "description": {
          "value": "Two Google employees must approve the change. Uploading the change or voting positively on Code-Review count as approval. Using a trusted device is required, see go/gerrit-onboarding#review-enforcement."
        },
        "applicabilityExpression": {
          "value": {
            "expressionString": "is:review-enforced_gerrit"
          }
        },
        "submittabilityExpression": {
          "expressionString": "is:review-enforcement-satisfied_gerrit"
        },
        "overrideExpression": {},
        "allowOverrideInChildProjects": false
      },
      "applicabilityExpressionResult": {
        "value": {"expression":{"expressionString":"is:review-enforced_gerrit"},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["is:review-enforced_gerrit"],"atomExplanations":{"value":{"is:review-enforced_gerrit":""}}}
      },
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"is:review-enforcement-satisfied_gerrit"},"status":"NOT_EVALUATED","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":[],"atomExplanations":{"value":null}}
      },
      "overrideExpressionResult": {},
      "patchSetCommitId": "65e4c4a21bbfdf36c55b840350864841474bf6bc",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    },
    {
      "submitRequirement": {
        "name": "Verified",
        "description": {
          "value": "CI result status for build and tests is passing"
        },
        "applicabilityExpression": {
          "value": {
            "expressionString": "-branch:refs/meta/config"
          }
        },
        "submittabilityExpression": {
          "expressionString": "label:Verified\u003dMAX AND -label:Verified\u003dMIN"
        },
        "overrideExpression": {},
        "allowOverrideInChildProjects": true
      },
      "applicabilityExpressionResult": {
        "value": {"expression":{"expressionString":"-branch:refs/meta/config"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["branch:refs/meta/config"],"atomExplanations":{"value":{"branch:refs/meta/config":""}}}
      },
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"label:Verified=MAX AND -label:Verified=MIN"},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["label:Verified=MAX","label:Verified=MIN"],"atomExplanations":{"value":{"label:Verified=MAX":"","label:Verified=MIN":""}}}
      },
      "overrideExpressionResult": {},
      "patchSetCommitId": "65e4c4a21bbfdf36c55b840350864841474bf6bc",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    },
    {
      "submitRequirement": {
        "name": "Want-Code-Review-From-All",
        "description": {
          "value": "A \u0027Code-Review\u0027 vote is required from all human reviewers (service users that are reviewers are ignored)."
        },
        "applicabilityExpression": {
          "value": {
            "expressionString": "footer:\"Want-Code-Review: all\" -label:Code-Review\u003e\u003d1,users\u003dhuman_reviewers"
          }
        },
        "submittabilityExpression": {
          "expressionString": "label:Code-Review\u003e\u003d1,users\u003dhuman_reviewers"
        },
        "overrideExpression": {},
        "allowOverrideInChildProjects": false
      },
      "applicabilityExpressionResult": {
        "value": {"expression":{"expressionString":"footer:\"Want-Code-Review: all\" -label:Code-Review>=1,users=human_reviewers"},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["footer:\"Want-Code-Review: all\"","label:Code-Review>=1,users=human_reviewers"],"atomExplanations":{"value":{"footer:\"Want-Code-Review: all\"":"","label:Code-Review>=1,users=human_reviewers":""}}}
      },
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"label:Code-Review>=1,users=human_reviewers"},"status":"NOT_EVALUATED","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":[],"atomExplanations":{"value":null}}
      },
      "overrideExpressionResult": {},
      "patchSetCommitId": "65e4c4a21bbfdf36c55b840350864841474bf6bc",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    }
  ]
}