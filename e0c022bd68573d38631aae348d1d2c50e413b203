{
  "comments": [
    {
      "key": {
        "uuid": "a4f7b4e4_65574bf4",
        "filename": "external_plugin_deps.bzl",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1006192
      },
      "writtenOn": "2017-12-21T16:34:42Z",
      "side": 1,
      "message": "This is the in-tree build, correct? Have you tried by chance to load the lib/jackson/BUILD?",
      "revId": "e0c022bd68573d38631aae348d1d2c50e413b203",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e16c967b_b22f9053",
        "filename": "external_plugin_deps.bzl",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1019328
      },
      "writtenOn": "2017-12-21T19:50:57Z",
      "side": 1,
      "message": "Yes, but I had problems, may be I misunderstood the way of doing it, but the build was failing complaining about not finding the jackson-core artifact.",
      "parentUuid": "a4f7b4e4_65574bf4",
      "revId": "e0c022bd68573d38631aae348d1d2c50e413b203",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "86c53d89_bcd700f5",
        "filename": "external_plugin_deps.bzl",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1011323
      },
      "writtenOn": "2017-12-22T11:04:24Z",
      "side": 1,
      "message": "Gerrit only exposes jackson_core, so that the rest of dependencies would have to be loaded explicitly, even in in tree build. On Gerrit Master, we could expose jackson_core in the plugin API, so that the plugins could rely on t and would need to provide there own jackson_core version.",
      "parentUuid": "a4f7b4e4_65574bf4",
      "revId": "e0c022bd68573d38631aae348d1d2c50e413b203",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ebacb8a9_19be8e63",
        "filename": "external_plugin_deps.bzl",
        "patchSetId": 1
      },
      "lineNbr": 5,
      "author": {
        "id": 1011323
      },
      "writtenOn": "2017-12-22T11:04:24Z",
      "side": 1,
      "message": "I suggest to omit loading jackson_core for now, in tree build (until we exposed jackson_core in plugin API, it is needed for standalone build). The ides, is to do, what I\u0027m doing in oauth plugin:\n\n  def external_plugin_deps(omit_commons_codec \u003d True):\n  maven_jar(\n      name \u003d \"scribe\",\n      artifact \u003d \"org.scribe:scribe:1.3.7\",\n      sha1 \u003d \"583921bed46635d9f529ef5f14f7c9e83367bc6e\",\n  )\n  if not omit_commons_codec:\n    maven_jar(\n       name \u003d \"commons_codec\",\n       artifact \u003d \"commons-codec:commons-codec:1.4\",\n       sha1 \u003d \"4216af16d38465bbab0f3dff8efa14204f7a399a\",\n    )\n\nSo that here we define:\n\n  def external_plugin_deps(omit_jackson_core \u003d True):\n    if not omit_jackson_core:\n      maven_jar(\n        name \u003d \"jackson_core\",\n        artifact \u003d \"com.fasterxml.jackson.core:jackson-core:%s\" % JACKSON_REV,\n        sha1 \u003d \"02eb801df67aacaf5b1deb4ac626e1964508e47b\",\n      )\n\nThe in tree build would invoke it without parameter, and jackson_core re-definition would be skipped, and the standalone build would say:\n\n  external_plugin_deps(omit_jackson_core \u003d False)",
      "revId": "e0c022bd68573d38631aae348d1d2c50e413b203",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "52f01a41_7684c54c",
        "filename": "external_plugin_deps.bzl",
        "patchSetId": 1
      },
      "lineNbr": 5,
      "author": {
        "id": 1019328
      },
      "writtenOn": "2017-12-22T12:13:41Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "ebacb8a9_19be8e63",
      "revId": "e0c022bd68573d38631aae348d1d2c50e413b203",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    }
  ]
}